not_equal:
    description: |
        Computes the non-equivalence of two tensors element-wise.

        Refer to :func:`mindspore.ops.ne` for more details.

        Inputs:
            - **x** (Union[Tensor, Number, bool]) - The first input is a number or
              a bool or a tensor whose data type is number or bool.
            - **y** (Union[Tensor, Number, bool]) - The second input is a number or
              a bool when the first input is a tensor or a tensor whose data type is number or bool.

        Outputs:
            Tensor, it has the same shape as the `x` and `y` after broadcasting, and the data type is bool.

        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``

        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> x = Tensor(np.array([1, 2, 3]), mindspore.float32)
            >>> output = ops.not_equal(x, 2.0)
            >>> print(output)
            [ True False  True]
            >>>
            >>> x = Tensor(np.array([1, 2, 3]), mindspore.int32)
            >>> y = Tensor(np.array([1, 2, 4]), mindspore.int32)
            >>> output = ops.not_equal(x, y)
            >>> print(output)
            [False False  True]