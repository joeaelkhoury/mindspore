div:
    description: |
        Computes the quotient of dividing the first input tensor by the second input tensor element-wise.

        .. math::

        out_{i} = x_{i} / y_{i}

        Note:
            - One of the two inputs must be a Tensor, when the two inputs have different shapes,
              they must be able to broadcast to a common shape.
            - The two inputs can not be bool type at the same time,
              [True, Tensor(True, bool\_), Tensor(np.array([True]), bool\_)] are all considered bool type.
            - The two inputs comply with the implicit type conversion rules to make the data types
              consistent.

        Inputs:
            - **x** (Union[Tensor, number.Number, bool]) - The first input is a number.Number or
              a bool or a tensor whose data type is
              `number <https://www.mindspore.cn/docs/en/master/api_python/mindspore.html#mindspore.dtype>`_ or
              `bool_ <https://www.mindspore.cn/docs/en/master/api_python/mindspore.html#mindspore.dtype>`_.
            - **y** (Union[Tensor, number.Number, bool]) - The second input, when the first input is a Tensor,
              the second input should be a number.Number or bool value, or a Tensor whose data type is number or bool.
              When the first input is Scalar, the second input must be a Tensor whose data type is number or bool.

        Outputs:
            Tensor, the shape is the same as the one of the input `x` , `y` after broadcasting,
            and the data type is the one with higher precision or higher digits among the two inputs.

        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``

        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> # case 1 :has same data type and shape of the two inputs
            >>> x = Tensor(np.array([-4.0, 5.0, 6.0]), mindspore.float32)
            >>> y = Tensor(np.array([3.0, 2.0, 3.0]), mindspore.float32)
            >>> div = ops.div
            >>> output = div(x, y)
            >>> print(output)
            [-1.3333334  2.5        2.        ]
            >>> # case 2 : different data type and shape of the two inputs
            >>> x = Tensor(np.array([-4.0, 5.0, 6.0]), mindspore.float32)
            >>> y = Tensor(2, mindspore.int32)
            >>> output = div(x, y)
            >>> print(output)
            [-2.  2.5  3.]
            >>> print(output.dtype)
            Float32
