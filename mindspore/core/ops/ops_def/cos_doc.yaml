cos:
    description: |
        Computes cosine of input element-wise.

        .. math::

            output_i = \cos(input_i)

        Args:
            input (Tensor): The shape of tensor is
                :math:`(N,*)` where :math:`*` means, any number of additional dimensions.

        Returns:
            Tensor, has the same shape as the `input`. 
            The dtype of output is float32 when dtype of `input` is in
            [bool, int8, uint8, int16, int32, int64]. Otherwise output has the same dtype as the `input`.

        Raises:
            TypeError: If `input` is not a Tensor.
            TypeError: On CPU or GPU: If dtype of `input` is not float16, float32 or float64, complex64, complex128.
                       On Ascend: If type of `input` is not bool, int8, uint8, int16, int32, int64, float16, float32 or float64, complex64, complex128.

        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``

        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> x = Tensor(np.array([0.24, 0.83, 0.31, 0.09]), mindspore.float32)
            >>> output = ops.cos(x)
            >>> print(output)
            [0.971338 0.6748758 0.95233357 0.9959527]
