addcdiv:
    description: |
        Performs the element-wise division of tensor tensor1 by tensor tensor2,
        multiply the result by the scalar value and add it to input_data.

        .. math::
            y[i] = input[i] + value[i] * (tensor1[i] / tensor2[i])

        Args:
            input (Tensor): The tensor to be added.
            tensor1 (Tensor): The numerator tensor.
            tensor2 (Tensor): The denominator tensor.
            value (Tensor): The multiplier for tensor1/tensor2.

        Returns:
            Tensor, has the same shape and dtype as tensor1/tensor2.

        Raises:
            TypeError: If dtype of `tensor1`, `tensor2`, `input` is not tensor.
            ValueError: If `tensor1` could not be broadcast to a tensor with shape of `tensor2`.
            ValueError: If `value` could not be broadcast to tensors with shapes of `tensor1/tensor2`.
            ValueError: If `input` could not be broadcast to tensors with shapes of `value*(tensor1/tensor2)`.

        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``

        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> input_data = Tensor(np.array([1, 1, 1, 1]), mindspore.float32)
            >>> x1 = Tensor(np.array([1, 2, 3, 4]), mindspore.float32)
            >>> x2 = Tensor(np.array([4, 3, 2, 1]), mindspore.float32)
            >>> value = Tensor([1], mindspore.float32)
            >>> y = ops.addcdiv_(input_data, x1, x2, value)
            >>> print(y)
            [1.25      1.6666667 2.5       5.       ]
